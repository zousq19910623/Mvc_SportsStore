@model SportsStore.WebUI.Models.CartIndexViewModel

@{
    ViewBag.Title = "购物车";
}

<style>
    #cartTable td {
        vertical-align: middle;
    }
</style>

<h2>你的购物车</h2>
<table class="table" id="cartTable">
    <thead>
        <tr>
            <th>数量</th>
            <th>名称</th>
            <th class="text-right">单价</th>
            <th class="text-right">总价</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var line in Model.Cart.Lines)
        {
            <tr>
                <td class="text-center">@line.Quantity</td>
                <td class="text-left">@line.Product.Name</td>
                <td class="text-right">@line.Product.Price.ToString("c")</td>
                <td class="text-right">@((line.Quantity * line.Product.Price).ToString("c"))</td>
                <td>
                    @using (Html.BeginForm("RemoveFromCart", "Cart"))
                    {
                        //如果这里使用 @Html.HiddenFor(x=>line.Product.ProductID)，则会生成Name='line.Product.ProductID'的元素，MVC则会无法识别
                        @Html.Hidden("ProductId", line.Product.ProductID)
                        @Html.HiddenFor(x => x.ReturnUrl)
                        <input type="submit" class="btn btn-sm btn-warning" value="删除" />
                    }
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="3" class="text-right">总共：</td>
            <td class="text-right">@Model.Cart.ComputeTotalValue().ToString("c")</td>
        </tr>
    </tfoot>
</table>

<div class="text-center">
    <a class="btn btn-primary" href="@Model.ReturnUrl">继续购物</a>
    @Html.ActionLink("立即结算", "Checkout", null, new { @class = "btn btn-primary" })
</div>
